@Chapter Introduction

This package provides an algorithm that computes a subgroup ladder from a permutation group up to the parent symmetric group.
There is also a function included which computes portions of the table of marks using subgroup chains.
The authors hope that this will someday be extended to use arbitrary subgroup ladders.

@Chapter subgroupladders

Solutions of some problems in group theory can relatively easy be transferred to a sub- or supergroup if the index is small.
Let <M>G</M> be a permutation group on the set <M>\{1,...,n\}</M>.
So one might try to find a series of subgroups <M>G = H_0,...,H_k = S_n</M> of the symmetric group <M>S_n</M> such that <M>H_{{i-1}}</M> is a subgroup of <M>H_i</M> for every <M>i</M> and transfer the solution of a problem for the symmetric group step by step to <M>G</M>.

Sometimes it is not possible to find such a series with small indices between consecutive subgroups.
This is where subgroup ladders may make sense:
A subgroup ladder is series of subgroups <M>G = H_0,...,H_k = S_n</M> of the symmetric group such that for every <M>1 \leq i \leq k</M>, <M>H_i</M> is a subgroup of <M>H_{{i-1}}</M> or <M>H_{{i-1}}</M> is a subgroup of <M>H_i</M>.
So we sometimes go up to a larger group in order to keep the indices small.
A subgroup ladder may look like this:
<#Include SYSTEM "ladder.figure"/>

If <M>G</M> is a Young subgroup of <M>S_n</M>, the algorithm in this repository can find a subgroup ladder of <M>G</M> such that the indices are at most the degree of the permutation group.
This algorithm was described by Bernd Schmalz in <Cite Key="MR1056150" Where="Theorem 3.1.1"/>

@Section subgroupladders
@SectionTitle Constructing Subgroupladders

The construction of a subgroupladder is implemented in several stages.
The internal functions for each of these stages are exposed by this package.
The main function of the subgroupladders package SubgroupLadder chains them together in a suitable way:

@Section tom
@SectionTitle Computing the Table of Marks

The table of marks is a powerful concept with many applications in Combinatorics.
It was introduced by Burnside in 1909 in <Cite Key="MR1575665"/>.

Let <M>G</M> be a finite group.
Let <M>U_1,...,U_n</M> be representatives of the conjugacy classes of subgroups of <M>G</M>.
Then the table of marks of <M>G</M> is the <M>n \times n</M> square matrix $M$ where <M>M_{i,j}</M>
is the number of fixed points of <M>U_i</M> on the right cosets of <M>U_j</M> in <M>G</M>.

The complete table of marks can be computed from the subgroup lattice using GAPs builtin `TableOfMarks` function.
However, one is often interesed in small portions of the table of marks, so we wish to construct an algorithm that efficiently computes sections of the table of marks.
As a right coset <M>U_jx</M> is a fixed point in the action of <M>U_j</M> if and only if the double coset <M>U_jxU_i</M> is actually a right coset, one can compute entries of the table of marks using double cosets.
In <Cite Key="MR1056150"/>, Schmalz computes double coset representatives using subgroup ladders.
However, the resulting algorithm to compute the table of marks is not very efficient.

The following method computes entries the table of marks directly just using subgroup chains.

@Chapter License

subgroupladders is free software you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version. For details, see the file LICENSE distributed as part of this package
or see the FSF's own site.
